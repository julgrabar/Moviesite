{"version":3,"file":"static/js/744.8480a9cf.chunk.js","mappings":"6LAEaA,EAAY,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,IACjC,OACE,wBACGD,EAAME,KAAI,SAAAC,GAAI,aACb,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaD,EAAKE,IAAMC,MAAO,CAAEC,KAAMN,GAA/C,mBACGE,EAAKK,aADR,QACiBL,EAAKM,iBAFfN,EAAKE,W,gICJTK,EAAa,CACxBC,KAAM,OACNC,KAAM,UACNC,IAAK,SAGMC,EAAc,SAACC,GAAoC,IAA1BC,EAAyB,uDAAT,KACpD,GAA0BC,EAAAA,EAAAA,UAAS,MAAnC,eAAOX,EAAP,KAAcY,EAAd,KACA,GAA4BD,EAAAA,EAAAA,UAASP,EAAWC,MAAhD,eAAOQ,EAAP,KAAeC,EAAf,KAsBA,OApBAC,EAAAA,EAAAA,YAAU,WACR,GAAsB,KAAlBL,EAAJ,CAIA,IAAMM,EAAU,mCAAG,2FACjBF,EAAUV,EAAWE,MADJ,kBAGMG,EAASC,GAHf,OAGTO,EAHS,OAIfL,EAASK,GAJM,gDAMfC,QAAQC,IAAR,MACAL,EAAUV,EAAWG,KAPN,yBASfO,EAAUV,EAAWC,MATN,4EAAH,qDAYhBW,OACC,CAACP,EAAUC,IAEP,CAACV,EAAOa,K,0MC/BjBO,IAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAM,mCAECC,EAAa,mCAAG,oGACFF,IAAAA,IAAA,sCAAyCC,IADvC,cACnBE,EADmB,yBAElBA,EAASC,KAAKC,SAFI,2CAAH,qDAKbC,EAAY,mCAAG,WAAOC,GAAP,4FAAcC,EAAd,+BAAmB,EAAnB,SACDR,IAAAA,IAAA,gCAAmCC,EAAnC,iCAA+DM,EAA/D,iBAA6EC,EAA7E,yBADC,cAClBL,EADkB,yBAEjBA,EAASC,KAAKC,SAFG,2CAAH,sDAKZI,EAAiB,mCAAG,WAAOC,GAAP,uFACNV,IAAAA,IAAA,iBAAoBU,EAApB,oBAAuCT,EAAvC,oBADM,cACvBE,EADuB,yBAEtBA,EAASC,MAFa,2CAAH,sDAKjBO,EAAiB,mCAAG,WAAOD,GAAP,4FAAgBF,EAAhB,+BAAqB,EAArB,SACNR,IAAAA,IAAA,iBAAoBU,EAApB,4BAA+CT,EAA/C,gCAA0EO,IADpE,cACvBL,EADuB,yBAEtBA,EAASC,KAAKC,SAFQ,2CAAH,sDAKjBO,EAAiB,mCAAG,WAAOF,GAAP,uFACNV,IAAAA,IAAA,iBAAoBU,EAApB,4BAA+CT,EAA/C,oBADM,cACvBE,EADuB,yBAEtBA,EAASC,KAAKS,MAFQ,2CAAH,uD,oGCC9B,UAlBiB,WACf,OAAwBzB,EAAAA,EAAAA,GAAYc,EAAAA,IAApC,eAAO5B,EAAP,KAAcmB,EAAd,KACA,GAA6BqB,EAAAA,EAAAA,MAArBC,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,OAElB,OACE,iCACE,2CACCvB,IAAWT,EAAAA,EAAAA,MACV,wEAEDS,IAAWT,EAAAA,EAAAA,OAAmB,SAAC,IAAD,IAC9BS,IAAWT,EAAAA,EAAAA,MAAmBV,IAC7B,SAAC,IAAD,CAAWA,MAAOA,EAAOC,IAAKwC,EAAWC","sources":["components/FilmsList/FilmsList.jsx","hooks/useFetching.jsx","services/api-service.js","views/HomePage.jsx"],"sourcesContent":["import { Link } from 'react-router-dom';\n\nexport const FilmsList = ({ films, loc }) => {\n  return (\n    <ul>\n      {films.map(film => (\n        <li key={film.id}>\n          <Link to={`/movies/${film.id}`} state={{ from: loc }}>\n            {film.title ?? film.original_name}\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n};\n","import { useState, useEffect } from 'react';\n\nexport const statusList = {\n  IDLE: 'idle',\n  LOAD: 'loading',\n  ERR: 'error',\n};\n\nexport const useFetching = (callback, fetchParametr = null) => {\n  const [state, setState] = useState(null);\n  const [status, setStatus] = useState(statusList.IDLE);\n\n  useEffect(() => {\n    if (fetchParametr === '') {\n      return;\n    }\n\n    const fetchFilms = async () => {\n      setStatus(statusList.LOAD);\n      try {\n        const result = await callback(fetchParametr);\n        setState(result);\n      } catch (error) {\n        console.log(error);\n        setStatus(statusList.ERR);\n      } finally {\n        setStatus(statusList.IDLE);\n      }\n    };\n    fetchFilms();\n  }, [callback, fetchParametr]);\n\n  return [state, status];\n};\n","import axios from \"axios\";\naxios.defaults.baseURL = \"https://api.themoviedb.org/3\"\nconst KEY = \"04c27220ef2dd4b0aa9913b6cfeafdd6\"\n\nexport const fetchTrending = async () =>{\n    const response = await axios.get(`/trending/movie/day?api_key=${KEY}`)\n    return response.data.results;\n}\n\nexport const searchMovies = async (query, page=1) => {\n    const response = await axios.get(`/search/movie?api_key=${KEY}&language=en-US&query=${query}&page=${page}&include_adult=false`);\n    return response.data.results;\n}\n\nexport const fetchMovieDetails = async (movieId) => {\n    const response = await axios.get(`/movie/${movieId}?api_key=${KEY}&language=en-US`);\n    return response.data;\n}\n\nexport const fetchMovieReviews = async (movieId, page=1) => {\n    const response = await axios.get(`/movie/${movieId}/reviews?api_key=${KEY}&language=en-US&page=${page}`);\n    return response.data.results;\n}\n\nexport const fetchMovieCredits = async (movieId) => {\n    const response = await axios.get(`/movie/${movieId}/credits?api_key=${KEY}&language=en-US`);\n    return response.data.cast;\n}","import { FilmsList } from 'components/FilmsList/FilmsList';\nimport { Loading } from 'components/Loading/Loading';\nimport { fetchTrending } from 'services/api-service';\nimport { useFetching } from 'hooks/useFetching';\nimport { statusList } from 'hooks/useFetching';\nimport { useLocation } from 'react-router-dom';\n\nconst HomePage = () => {\n  const [films, status] = useFetching(fetchTrending);\n  const { pathname, search } = useLocation();\n\n  return (\n    <>\n      <h1>Trending films</h1>\n      {status === statusList.ERR && (\n        <p>Something is wrong... Try to reload the page</p>\n      )}\n      {status === statusList.LOAD && <Loading />}\n      {status === statusList.IDLE && films && (\n        <FilmsList films={films} loc={pathname + search} />\n      )}\n    </>\n  );\n};\n\nexport default HomePage;\n"],"names":["FilmsList","films","loc","map","film","to","id","state","from","title","original_name","statusList","IDLE","LOAD","ERR","useFetching","callback","fetchParametr","useState","setState","status","setStatus","useEffect","fetchFilms","result","console","log","axios","KEY","fetchTrending","response","data","results","searchMovies","query","page","fetchMovieDetails","movieId","fetchMovieReviews","fetchMovieCredits","cast","useLocation","pathname","search"],"sourceRoot":""}