{"version":3,"file":"static/js/186.d6e1a56f.chunk.js","mappings":"2MAiCA,UA1BgB,WACd,IACQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA0BE,EAAAA,EAAAA,GAAYC,EAAAA,GAFzB,EAEkDH,GAA/D,eAAOI,EAAP,KAAgBC,EAAhB,KAEA,OACE,gCACGA,IAAWC,EAAAA,EAAAA,MACV,wEAEDF,GAA8B,IAAnBA,EAAQG,SAAgB,+CACnCF,IAAWC,EAAAA,EAAAA,OAAmB,SAAC,IAAD,IAC9BD,IAAWC,EAAAA,EAAAA,MAAmBF,IAC7B,wBACGA,EAAQI,KAAI,SAAAC,GAAM,OACjB,2BACE,uBAAIA,EAAOC,UACX,uBAAID,EAAOE,YAFJF,EAAOG,c,gICpBfN,EAAa,CACxBO,KAAM,OACNC,KAAM,UACNC,IAAK,SAGMb,EAAc,SAACc,EAAUC,GAAgC,IAA1BC,EAAyB,uDAAT,KAC1D,GAA0BC,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA4BF,EAAAA,EAAAA,UAASb,EAAWO,MAAhD,eAAOR,EAAP,KAAeiB,EAAf,KAsBA,OApBAC,EAAAA,EAAAA,YAAU,WACR,GAAsB,KAAlBL,EAAJ,CAIA,IAAMM,EAAU,mCAAG,2FACjBF,EAAUhB,EAAWQ,MADJ,kBAGME,EAASC,EAAMC,GAHrB,OAGTO,EAHS,OAIfJ,EAASI,GAJM,gDAMfC,QAAQC,IAAR,MACAL,EAAUhB,EAAWS,KAPN,yBASfO,EAAUhB,EAAWO,MATN,4EAAH,qDAYhBW,OACC,CAACP,EAAMD,EAAUE,IAEb,CAACE,EAAOf,K,0MC/BjBuB,IAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAM,mCAECC,EAAa,mCAAG,WAAOb,GAAP,uFACFW,IAAAA,IAAA,sCAAyCC,EAAzC,iBAAqDZ,IADnD,cACnBc,EADmB,yBAElBA,EAASC,KAAKC,SAFI,2CAAH,sDAKbC,EAAY,mCAAG,WAAQjB,EAAKkB,GAAb,uFACDP,IAAAA,IAAA,gCAAmCC,EAAnC,iCAA+DM,EAA/D,iBAA6ElB,EAA7E,yBADC,cAClBc,EADkB,yBAEjBA,EAASC,KAAKC,SAFG,2CAAH,wDAKZG,EAAiB,mCAAG,WAAOpC,GAAP,uFACN4B,IAAAA,IAAA,iBAAoB5B,EAApB,oBAAuC6B,EAAvC,oBADM,cACvBE,EADuB,yBAEtBA,EAASC,MAFa,2CAAH,sDAKjB7B,EAAiB,mCAAG,WAAOc,EAAKjB,GAAZ,uFACN4B,IAAAA,IAAA,iBAAoB5B,EAApB,4BAA+C6B,EAA/C,gCAA0EZ,IADpE,cACvBc,EADuB,yBAEtBA,EAASC,KAAKC,SAFQ,2CAAH,wDAKjBI,EAAiB,mCAAG,WAAOrC,GAAP,uFACN4B,IAAAA,IAAA,iBAAoB5B,EAApB,4BAA+C6B,EAA/C,oBADM,cACvBE,EADuB,yBAEtBA,EAASC,KAAKM,MAFQ,2CAAH","sources":["components/Reviews/Reviews.jsx","hooks/useFetching.jsx","services/api-service.js"],"sourcesContent":["import { useParams } from 'react-router-dom';\nimport { fetchMovieReviews } from 'services/api-service';\nimport { useFetching } from 'hooks/useFetching';\nimport { Loading } from 'components/Loading/Loading';\nimport { statusList } from 'hooks/useFetching';\n\n// добавить заглушку если нет отзывов и вообще все заглушки\nconst Reviews = () => {\n  const page = 1;\n  const { movieId } = useParams();\n  const [reviews, status] = useFetching(fetchMovieReviews, page, movieId);\n\n  return (\n    <>\n      {status === statusList.ERR && (\n        <p>Something is wrong... Try to reload the page</p>\n      )}\n      {reviews && reviews.length === 0 && <p>There is no reviews</p>}\n      {status === statusList.LOAD && <Loading />}\n      {status === statusList.IDLE && reviews && (\n        <ul>\n          {reviews.map(review => (\n            <li key={review.id}>\n              <p>{review.author}</p>\n              <p>{review.content}</p>\n            </li>\n          ))}\n        </ul>\n      )}\n    </>\n  );\n};\n\nexport default Reviews;\n","import { useState, useEffect } from 'react';\n\nexport const statusList = {\n  IDLE: 'idle',\n  LOAD: 'loading',\n  ERR: 'error',\n};\n\nexport const useFetching = (callback, page, fetchParametr = null) => {\n  const [state, setState] = useState(null);\n  const [status, setStatus] = useState(statusList.IDLE);\n\n  useEffect(() => {\n    if (fetchParametr === '') {\n      return;\n    }\n\n    const fetchFilms = async () => {\n      setStatus(statusList.LOAD);\n      try {\n        const result = await callback(page, fetchParametr);\n        setState(result);\n      } catch (error) {\n        console.log(error);\n        setStatus(statusList.ERR);\n      } finally {\n        setStatus(statusList.IDLE);\n      }\n    };\n    fetchFilms();\n  }, [page, callback, fetchParametr]);\n\n  return [state, status];\n};\n","import axios from \"axios\";\naxios.defaults.baseURL = \"https://api.themoviedb.org/3\"\nconst KEY = \"04c27220ef2dd4b0aa9913b6cfeafdd6\"\n\nexport const fetchTrending = async (page) =>{\n    const response = await axios.get(`/trending/movie/day?api_key=${KEY}&page=${page}`)\n    return response.data.results;\n}\n\nexport const searchMovies = async ( page,query) => {\n    const response = await axios.get(`/search/movie?api_key=${KEY}&language=en-US&query=${query}&page=${page}&include_adult=false`);\n    return response.data.results;\n}\n\nexport const fetchMovieDetails = async (movieId) => {\n    const response = await axios.get(`/movie/${movieId}?api_key=${KEY}&language=en-US`);\n    return response.data;\n}\n\nexport const fetchMovieReviews = async (page,movieId ) => {\n    const response = await axios.get(`/movie/${movieId}/reviews?api_key=${KEY}&language=en-US&page=${page}`);\n    return response.data.results;\n}\n\nexport const fetchMovieCredits = async (movieId) => {\n    const response = await axios.get(`/movie/${movieId}/credits?api_key=${KEY}&language=en-US`);\n    return response.data.cast;\n}\n\n"],"names":["movieId","useParams","useFetching","fetchMovieReviews","reviews","status","statusList","length","map","review","author","content","id","IDLE","LOAD","ERR","callback","page","fetchParametr","useState","state","setState","setStatus","useEffect","fetchFilms","result","console","log","axios","KEY","fetchTrending","response","data","results","searchMovies","query","fetchMovieDetails","fetchMovieCredits","cast"],"sourceRoot":""}