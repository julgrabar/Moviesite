{"version":3,"file":"static/js/756.1e9efb14.chunk.js","mappings":"kPAEaA,EAAa,CACxBC,KAAM,OACNC,KAAM,UACNC,IAAK,SAGMC,EAAc,SAACC,GAAoC,IAA1BC,EAAyB,uDAAT,KACpD,GAA0BC,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA4BF,EAAAA,EAAAA,UAASP,EAAWC,MAAhD,eAAOS,EAAP,KAAeC,EAAf,KAsBA,OApBAC,EAAAA,EAAAA,YAAU,WACR,GAAsB,KAAlBN,EAAJ,CAIA,IAAMO,EAAU,mCAAG,2FACjBF,EAAUX,EAAWE,MADJ,kBAGMG,EAASC,GAHf,OAGTQ,EAHS,OAIfL,EAASK,GAJM,gDAMfC,QAAQC,IAAR,MACAL,EAAUX,EAAWG,KAPN,yBASfQ,EAAUX,EAAWC,MATN,4EAAH,qDAYhBY,OACC,CAACR,EAAUC,IAEP,CAACE,EAAOE,K,0MC/BjBO,IAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAM,mCAECC,EAAa,mCAAG,oGACFF,IAAAA,IAAA,sCAAyCC,IADvC,cACnBE,EADmB,yBAElBA,EAASC,KAAKC,SAFI,2CAAH,qDAKbC,EAAY,mCAAG,WAAOC,GAAP,4FAAcC,EAAd,+BAAmB,EAAnB,SACDR,IAAAA,IAAA,gCAAmCC,EAAnC,iCAA+DM,EAA/D,iBAA6EC,EAA7E,yBADC,cAClBL,EADkB,yBAEjBA,EAASC,KAAKC,SAFG,2CAAH,sDAKZI,EAAiB,mCAAG,WAAOC,GAAP,uFACNV,IAAAA,IAAA,iBAAoBU,EAApB,oBAAuCT,EAAvC,oBADM,cACvBE,EADuB,yBAEtBA,EAASC,MAFa,2CAAH,sDAKjBO,EAAiB,mCAAG,WAAOD,GAAP,4FAAgBF,EAAhB,+BAAqB,EAArB,SACNR,IAAAA,IAAA,iBAAoBU,EAApB,4BAA+CT,EAA/C,gCAA0EO,IADpE,cACvBL,EADuB,yBAEtBA,EAASC,KAAKC,SAFQ,2CAAH,sDAKjBO,EAAiB,mCAAG,WAAOF,GAAP,uFACNV,IAAAA,IAAA,iBAAoBU,EAApB,4BAA+CT,EAA/C,oBADM,cACvBE,EADuB,yBAEtBA,EAASC,KAAKS,MAFQ,2CAAH,uD,iJCrBjBC,EAAeC,EAAAA,GAAAA,IAAH,qGAQZC,EAAYD,EAAAA,GAAAA,IAAH,kFAQTE,GAAaF,EAAAA,EAAAA,IAAOG,EAAAA,GAAPH,CAAH,+CAIVI,GAAUJ,EAAAA,EAAAA,IAAOG,EAAAA,GAAPH,CAAH,uL,mBC0BpB,EAzCyB,WAAO,IAAD,QACrBL,GAAYU,EAAAA,EAAAA,MAAZV,QACFW,GAAWC,EAAAA,EAAAA,MAEjB,GAAwBnC,EAAAA,EAAAA,GAAYsB,EAAAA,GAAmBC,GAAvD,eAAOa,EAAP,KAAc9B,EAAd,KAGA,OACE,2BACGA,IAAWV,EAAAA,EAAAA,MACV,wEAEDU,IAAWV,EAAAA,EAAAA,OAAmB,SAACyC,EAAA,EAAD,IAC9B/B,IAAWV,EAAAA,EAAAA,MAAmBwC,IAC7B,iCACE,SAACJ,EAAD,CAASM,GAAE,iBAAEJ,QAAF,IAAEA,GAAF,UAAEA,EAAU9B,aAAZ,aAAE,EAAiBmC,YAAnB,QAA2B,IAAtC,sBACA,UAACZ,EAAD,YACE,gBACEa,IAAG,yCAAoCJ,EAAMK,aAC7CC,IAAI,OAEN,UAACb,EAAD,YACE,kCAAKO,EAAMO,aAAX,QAAoBP,EAAMQ,iBAC1B,8CAAYR,EAAMS,oBAAlB,QAAkC,qBAClC,wCACA,uBAAIT,EAAMU,YACV,sCACA,uBAAIV,EAAMW,OAAOC,KAAI,SAAAC,GAAK,OAAIA,EAAMC,QAAMC,KAAK,cAGnD,mBACA,SAACrB,EAAD,CAAYQ,GAAG,OAAf,mBACA,SAACR,EAAD,CAAYQ,GAAG,UAAf,sBACA,mBACA,SAAC,KAAD","sources":["hooks/useFetching.jsx","services/api-service.js","views/MovieDetailsPage.styled.jsx","views/MovieDetailsPage.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\n\nexport const statusList = {\n  IDLE: 'idle',\n  LOAD: 'loading',\n  ERR: 'error',\n};\n\nexport const useFetching = (callback, fetchParametr = null) => {\n  const [state, setState] = useState(null);\n  const [status, setStatus] = useState(statusList.IDLE);\n\n  useEffect(() => {\n    if (fetchParametr === '') {\n      return;\n    }\n\n    const fetchFilms = async () => {\n      setStatus(statusList.LOAD);\n      try {\n        const result = await callback(fetchParametr);\n        setState(result);\n      } catch (error) {\n        console.log(error);\n        setStatus(statusList.ERR);\n      } finally {\n        setStatus(statusList.IDLE);\n      }\n    };\n    fetchFilms();\n  }, [callback, fetchParametr]);\n\n  return [state, status];\n};\n","import axios from \"axios\";\naxios.defaults.baseURL = \"https://api.themoviedb.org/3\"\nconst KEY = \"04c27220ef2dd4b0aa9913b6cfeafdd6\"\n\nexport const fetchTrending = async () =>{\n    const response = await axios.get(`/trending/movie/day?api_key=${KEY}`)\n    return response.data.results;\n}\n\nexport const searchMovies = async (query, page=1) => {\n    const response = await axios.get(`/search/movie?api_key=${KEY}&language=en-US&query=${query}&page=${page}&include_adult=false`);\n    return response.data.results;\n}\n\nexport const fetchMovieDetails = async (movieId) => {\n    const response = await axios.get(`/movie/${movieId}?api_key=${KEY}&language=en-US`);\n    return response.data;\n}\n\nexport const fetchMovieReviews = async (movieId, page=1) => {\n    const response = await axios.get(`/movie/${movieId}/reviews?api_key=${KEY}&language=en-US&page=${page}`);\n    return response.data.results;\n}\n\nexport const fetchMovieCredits = async (movieId) => {\n    const response = await axios.get(`/movie/${movieId}/credits?api_key=${KEY}&language=en-US`);\n    return response.data.cast;\n}","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const MovieDetails = styled.div`\n  display: flex;\n  max-width: 100vw;\n  img {\n    max-height: 400px;\n  }\n`;\n\nexport const MovieInfo = styled.div`\n  padding: 30px;\n\n  span {\n    font-weight: 700;\n  }\n`;\n\nexport const StyledLink = styled(Link)`\n  margin-right: 10px;\n`;\n\nexport const BtnLink = styled(Link)`\n  display: inline-block;\n  padding: 10px;\n  margin: 10px 0;\n  background-color: #3535a9;\n  color: white;\n  border-radius: 5px;\n  text-decoration: none;\n`;\n","import { useFetching } from 'hooks/useFetching';\nimport { Outlet, useLocation, useParams } from 'react-router-dom';\nimport { fetchMovieDetails } from 'services/api-service';\nimport { MovieInfo, MovieDetails, BtnLink } from './MovieDetailsPage.styled';\nimport { StyledLink } from './MovieDetailsPage.styled';\nimport { statusList } from 'hooks/useFetching';\nimport { Loading } from 'components/Loading/Loading';\n\nconst MovieDetailsPage = () => {\n  const { movieId } = useParams();\n  const location = useLocation();\n  // const navigate = useNavigate();\n  const [movie, status] = useFetching(fetchMovieDetails, movieId);\n\n  // console.log(location);\n  return (\n    <div>\n      {status === statusList.ERR && (\n        <p>Something is wrong... Try to reload the page</p>\n      )}\n      {status === statusList.LOAD && <Loading />}\n      {status === statusList.IDLE && movie && (\n        <>\n          <BtnLink to={location?.state?.from ?? '/'}>Go back</BtnLink>\n          <MovieDetails>\n            <img\n              src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`}\n              alt=\"#\"\n            />\n            <MovieInfo>\n              <h2>{movie.title ?? movie.original_name}</h2>\n              <p>Rating: {movie.vote_average ?? 'No information'}</p>\n              <span>Overview</span>\n              <p>{movie.overview}</p>\n              <span>Genres</span>\n              <p>{movie.genres.map(genre => genre.name).join(',')}</p>\n            </MovieInfo>\n          </MovieDetails>\n          <hr />\n          <StyledLink to=\"cast\">Cast</StyledLink>\n          <StyledLink to=\"reviews\">Reviews</StyledLink>\n          <hr />\n          <Outlet />\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default MovieDetailsPage;\n"],"names":["statusList","IDLE","LOAD","ERR","useFetching","callback","fetchParametr","useState","state","setState","status","setStatus","useEffect","fetchFilms","result","console","log","axios","KEY","fetchTrending","response","data","results","searchMovies","query","page","fetchMovieDetails","movieId","fetchMovieReviews","fetchMovieCredits","cast","MovieDetails","styled","MovieInfo","StyledLink","Link","BtnLink","useParams","location","useLocation","movie","Loading","to","from","src","poster_path","alt","title","original_name","vote_average","overview","genres","map","genre","name","join"],"sourceRoot":""}