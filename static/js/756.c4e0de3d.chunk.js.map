{"version":3,"file":"static/js/756.c4e0de3d.chunk.js","mappings":"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","sources":["hooks/useFetching.jsx","services/api-service.js","views/MovieDetailsPage.styled.jsx","views/MovieDetailsPage.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\n\nexport const statusList = {\n  IDLE: 'idle',\n  LOAD: 'loading',\n  ERR: 'error',\n};\n\nexport const useFetching = (callback, fetchParametr = null) => {\n  const [state, setState] = useState(null);\n  const [status, setStatus] = useState(statusList.IDLE);\n\n  useEffect(() => {\n    if (fetchParametr === '') {\n      return;\n    }\n\n    const fetchFilms = async () => {\n      setStatus(statusList.LOAD);\n      try {\n        const result = await callback(fetchParametr);\n        setState(result);\n      } catch (error) {\n        console.log(error);\n        setStatus(statusList.ERR);\n      } finally {\n        setStatus(statusList.IDLE);\n      }\n    };\n    fetchFilms();\n  }, [callback, fetchParametr]);\n\n  return [state, status];\n};\n","import axios from \"axios\";\naxios.defaults.baseURL = \"https://api.themoviedb.org/3\"\nconst KEY = \"04c27220ef2dd4b0aa9913b6cfeafdd6\"\n\nexport const fetchTrending = async () =>{\n    const response = await axios.get(`/trending/movie/day?api_key=${KEY}`)\n    return response.data.results;\n}\n\nexport const searchMovies = async (query, page=1) => {\n    const response = await axios.get(`/search/movie?api_key=${KEY}&language=en-US&query=${query}&page=${page}&include_adult=false`);\n    return response.data.results;\n}\n\nexport const fetchMovieDetails = async (movieId) => {\n    const response = await axios.get(`/movie/${movieId}?api_key=${KEY}&language=en-US`);\n    return response.data;\n}\n\nexport const fetchMovieReviews = async (movieId, page=1) => {\n    const response = await axios.get(`/movie/${movieId}/reviews?api_key=${KEY}&language=en-US&page=${page}`);\n    return response.data.results;\n}\n\nexport const fetchMovieCredits = async (movieId) => {\n    const response = await axios.get(`/movie/${movieId}/credits?api_key=${KEY}&language=en-US`);\n    return response.data.cast;\n}\n\nexport const fetchImages = async (movieId) => {\n    const response = await axios.get(`/movie/${movieId}/images?api_key=${KEY}&language=en-US`) \n    return response.data\n}","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const MovieDetails = styled.div`\n  display: flex;\n  max-width: 100vw;\n  padding: 0 80px;\n\n  img {\n    border-radius: 24px;\n    margin-right: 80px;\n    height: 720px;\n    width: 480px;\n  }\n`;\n\nexport const MovieInfo = styled.div`\n  span {\n    margin-bottom: 24px;\n    font-weight: 400;\n    font-size: 20px;\n    line-height: 1.6;\n    color: #c3c8d4;\n    p:first-child {\n      font-size: 16px;\n      line-height: 1.5;\n      color: #767e94;\n      margin-bottom: 8px;\n    }\n  }\n\n  .tagline {\n    font-weight: 700;\n    font-size: 24px;\n    line-height: 1.33;\n    letter-spacing: -0.015em;\n    color: #ebeef5;\n    margin-bottom: 24px;\n  }\n\n  .overview {\n    font-weight: 400;\n    font-size: 20px;\n    line-height: 1.6;\n    color: #8e95a9;\n    margin-bottom: 24px;\n  }\n`;\n\nexport const StyledLink = styled(Link)`\n  margin-right: 10px;\n`;\n\nexport const BtnLink = styled(Link)`\n  display: inline-block;\n  padding: 10px;\n  margin: 10px 0;\n  background-color: #3535a9;\n  color: white;\n  border-radius: 5px;\n  text-decoration: none;\n`;\n\nexport const BackdropPoster = styled.div`\n  max-width: 1280px;\n  height: 480px;\n  position: relative;\n\n  background: linear-gradient(\n      180deg,\n      rgba(54, 44, 146, 0.4) 0%,\n      rgba(18, 98, 151, 0.4) 100%\n    ),\n    url(${props => props.img}) center/cover no-repeat;\n\n  border-radius: 40px;\n  margin-bottom: 150px;\n`;\n\nexport const MovieTitle = styled.div`\n  position: absolute;\n  left: 80px;\n  bottom: -70px;\n  background: rgba(32, 40, 62, 0.5);\n  backdrop-filter: blur(24px);\n  border-radius: 24px;\n  padding: 40px;\n  max-width: 50%;\n\n  h1 {\n    font-weight: 600;\n    font-size: 32px;\n    line-height: 1.25;\n\n    letter-spacing: -0.02em;\n    color: #ebeef5;\n  }\n`;\n","import { useFetching } from 'hooks/useFetching';\nimport { Outlet, useLocation, useParams } from 'react-router-dom';\nimport { fetchMovieDetails } from 'services/api-service';\nimport {\n  MovieInfo,\n  MovieDetails,\n  BtnLink,\n  BackdropPoster,\n  MovieTitle,\n} from './MovieDetailsPage.styled';\nimport { StyledLink } from './MovieDetailsPage.styled';\nimport { statusList } from 'hooks/useFetching';\nimport { Loading } from 'components/Loading/Loading';\n\nconst MovieDetailsPage = () => {\n  const { movieId } = useParams();\n  const location = useLocation();\n  const [movie, status] = useFetching(fetchMovieDetails, movieId);\n\n  // console.log(backdrop);\n  return (\n    <div>\n      {status === statusList.ERR && (\n        <p>Something is wrong... Try to reload the page</p>\n      )}\n      {status === statusList.LOAD && <Loading />}\n      {status === statusList.IDLE && movie && (\n        <>\n          <BackdropPoster\n            img={`https://image.tmdb.org/t/p/original${movie.backdrop_path}`}\n          >\n            <MovieTitle>\n              <h1>{movie.title ?? movie.original_name}</h1>\n            </MovieTitle>\n          </BackdropPoster>\n\n          <MovieDetails>\n            <img\n              src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`}\n              alt=\"#\"\n            />\n\n            <MovieInfo>\n              <span className=\"tagline\">{movie.tagline}</span>\n\n              <p className=\"overview\">{movie.overview}</p>\n\n              <span>\n                <p>Rating:</p>\n                <p> {movie.vote_average ?? 'No information'}</p>\n              </span>\n\n              <span>\n                <p>Release Date:</p>\n                <p>{movie.release_date}</p>\n              </span>\n\n              <span>\n                <p>Run time</p>\n                <p>{movie.runtime}</p>\n              </span>\n\n              <span>\n                <p>Genres</p>{' '}\n                <p>{movie.genres.map(genre => genre.name).join(', ')}</p>\n              </span>\n            </MovieInfo>\n          </MovieDetails>\n          <BtnLink to={location?.state?.from ?? '/'}>Go back</BtnLink>\n          <hr />\n          <StyledLink to=\"cast\">Cast</StyledLink>\n          <StyledLink to=\"reviews\">Reviews</StyledLink>\n          <hr />\n          <Outlet />\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default MovieDetailsPage;\n"],"names":["statusList","IDLE","LOAD","ERR","useFetching","callback","fetchParametr","useState","state","setState","status","setStatus","useEffect","fetchFilms","result","console","log","axios","KEY","fetchTrending","response","data","results","searchMovies","query","page","fetchMovieDetails","movieId","fetchMovieReviews","fetchMovieCredits","cast","MovieDetails","styled","MovieInfo","StyledLink","Link","BtnLink","BackdropPoster","props","img","MovieTitle","useParams","location","useLocation","movie","Loading","backdrop_path","title","original_name","src","poster_path","alt","className","tagline","overview","vote_average","release_date","runtime","genres","map","genre","name","join","to","from"],"sourceRoot":""}