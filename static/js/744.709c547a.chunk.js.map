{"version":3,"file":"static/js/744.709c547a.chunk.js","mappings":"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","sources":["components/FilmsList/FilmsList.styled.jsx","components/FilmsList/FilmsList.jsx","hooks/useFetching.jsx","services/api-service.js","views/Head.styled.jsx","views/HomePage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: grid;\n  gap: 14px;\n\n  @media screen and (min-width: 480px) {\n    grid-template-columns: repeat(2, 1fr);\n    /* grid-template-rows: repeat(10, 1fr); */\n  }\n\n  @media screen and (min-width: 768px) {\n    grid-template-columns: repeat(3, 1fr);\n    /* grid-template-rows: repeat(10, 1fr); */\n    gap: 24px;\n  }\n\n  @media screen and (min-width: 1200px) {\n    grid-template-columns: repeat(4, 1fr);\n    /* grid-template-rows: repeat(5, 1fr); */\n    gap: 24px;\n  }\n`;\n\nexport const ListItem = styled.li`\n  color: grey;\n  background-color: rgb(32, 40, 62, 80%);\n  padding: 8px;\n  border-radius: 12px;\n  position: relative;\n\n  img {\n    border-radius: 5px;\n  }\n\n  .film-info {\n    font-weight: 600;\n    font-size: 16px;\n    line-height: 1.5;\n\n    letter-spacing: 0.02em;\n\n    color: #ebeef5;\n    padding-top: 18px;\n  }\n`;\n\nexport const Vote = styled.span`\n  position: absolute;\n  top: 20px;\n  left: 20px;\n  background: rgba(0, 0, 0, 0.65);\n  backdrop-filter: blur(8px);\n  padding: 4px 8px;\n  border-radius: 8px;\n  color: #ffad49;\n  font-size: 16px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  .md-16 {\n    font-size: 16px;\n  }\n`;\n","import { Link } from 'react-router-dom';\nimport { ListItem, List, Vote } from './FilmsList.styled';\n\nexport const FilmsList = ({ films, loc }) => {\n  return (\n    <List>\n      {films.map(\n        ({\n          id,\n          poster_path: poster,\n          original_title,\n          title,\n          vote_average: vote,\n        }) => (\n          <ListItem key={id}>\n            <Link to={`/movies/${id}`} state={{ from: loc }}>\n              <img\n                src={`https://image.tmdb.org/t/p/w500${poster}`}\n                alt={title ?? original_title + 'poster'}\n              />\n              <div className=\"film-info\">\n                <p>{title ?? original_title}</p>\n              </div>\n              {vote !== 0 && (\n                <Vote>\n                  <span className=\"material-icons md-16\">star_border</span>\n                  {vote}\n                </Vote>\n              )}\n            </Link>\n          </ListItem>\n        )\n      )}\n    </List>\n  );\n};\n","import { useState, useEffect } from 'react';\n\nexport const statusList = {\n  IDLE: 'idle',\n  LOAD: 'loading',\n  ERR: 'error',\n};\n\nexport const useFetching = (callback, fetchParametr = null) => {\n  const [state, setState] = useState(null);\n  const [status, setStatus] = useState(statusList.IDLE);\n\n  useEffect(() => {\n    if (fetchParametr === '') {\n      return;\n    }\n\n    const fetchFilms = async () => {\n      setStatus(statusList.LOAD);\n      try {\n        const result = await callback(fetchParametr);\n        setState(result);\n      } catch (error) {\n        console.log(error);\n        setStatus(statusList.ERR);\n      } finally {\n        setStatus(statusList.IDLE);\n      }\n    };\n    fetchFilms();\n  }, [callback, fetchParametr]);\n\n  return [state, status];\n};\n","import axios from \"axios\";\naxios.defaults.baseURL = \"https://api.themoviedb.org/3\"\nconst KEY = \"04c27220ef2dd4b0aa9913b6cfeafdd6\"\n\nexport const fetchTrending = async () =>{\n    const response = await axios.get(`/trending/movie/day?api_key=${KEY}`)\n    return response.data.results;\n}\n\nexport const searchMovies = async (query, page=1) => {\n    const response = await axios.get(`/search/movie?api_key=${KEY}&language=en-US&query=${query}&page=${page}&include_adult=false`);\n    return response.data.results;\n}\n\nexport const fetchMovieDetails = async (movieId) => {\n    const response = await axios.get(`/movie/${movieId}?api_key=${KEY}&language=en-US`);\n    return response.data;\n}\n\nexport const fetchMovieReviews = async (movieId, page=1) => {\n    const response = await axios.get(`/movie/${movieId}/reviews?api_key=${KEY}&language=en-US&page=${page}`);\n    return response.data.results;\n}\n\nexport const fetchMovieCredits = async (movieId) => {\n    const response = await axios.get(`/movie/${movieId}/credits?api_key=${KEY}&language=en-US`);\n    return response.data.cast;\n}\n\nexport const fetchImages = async (movieId) => {\n    const response = await axios.get(`/movie/${movieId}/images?api_key=${KEY}&language=en-US`) \n    return response.data\n}","import styled from 'styled-components';\n\nexport const Head = styled.h1`\n  font-weight: 600;\n  font-size: 64px;\n  line-height: 1.25;\n\n  letter-spacing: -0.02em;\n\n  color: #ebeef5;\n  margin: 80px 0;\n`;\n","import { FilmsList } from 'components/FilmsList/FilmsList';\nimport { Loading } from 'components/Loading/Loading';\nimport { fetchTrending } from 'services/api-service';\nimport { useFetching } from 'hooks/useFetching';\nimport { statusList } from 'hooks/useFetching';\nimport { useLocation } from 'react-router-dom';\nimport { Head } from './Head.styled';\n\nconst HomePage = () => {\n  const [films, status] = useFetching(fetchTrending);\n  const { pathname, search } = useLocation();\n\n  return (\n    <>\n      <Head>Trending films</Head>\n      {status === statusList.ERR && (\n        <p>Something is wrong... Try to reload the page</p>\n      )}\n      {status === statusList.LOAD && <Loading />}\n      {status === statusList.IDLE && films && (\n        <FilmsList films={films} loc={pathname + search} />\n      )}\n    </>\n  );\n};\n\nexport default HomePage;\n"],"names":["List","styled","ListItem","Vote","FilmsList","films","loc","map","id","poster","poster_path","original_title","title","vote","vote_average","to","state","from","src","alt","className","statusList","IDLE","LOAD","ERR","useFetching","callback","fetchParametr","useState","setState","status","setStatus","useEffect","fetchFilms","result","console","log","axios","KEY","fetchTrending","response","data","results","searchMovies","query","page","fetchMovieDetails","movieId","fetchMovieReviews","fetchMovieCredits","cast","Head","useLocation","pathname","search"],"sourceRoot":""}