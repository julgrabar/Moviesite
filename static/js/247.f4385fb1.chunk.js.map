{"version":3,"file":"static/js/247.f4385fb1.chunk.js","mappings":"4MA8BA,UAxBa,WACX,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAyBE,EAAAA,EAAAA,GAAYC,EAAAA,GAAmBH,GAAxD,eAAOI,EAAP,KAAeC,EAAf,KAEA,OACE,gCACGA,IAAWC,EAAAA,EAAAA,MACV,wEAEDF,GAA4B,IAAlBA,EAAOG,SAChB,gEAEDF,IAAWC,EAAAA,EAAAA,OAAmB,SAAC,IAAD,IAC9BD,IAAWC,EAAAA,EAAAA,MAAmBF,IAC7B,wBACGA,EAAOI,KAAI,SAAAC,GAAK,OACf,wBAAoBA,EAAMC,MAAjBD,EAAME,c,gICpBdL,EAAa,CACxBM,KAAM,OACNC,KAAM,UACNC,IAAK,SAGMZ,EAAc,SAACa,GAAoC,IAA1BC,EAAyB,uDAAT,KACpD,GAA0BC,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA4BF,EAAAA,EAAAA,UAASX,EAAWM,MAAhD,eAAOP,EAAP,KAAee,EAAf,KAsBA,OApBAC,EAAAA,EAAAA,YAAU,WACR,GAAsB,KAAlBL,EAAJ,CAIA,IAAMM,EAAU,mCAAG,2FACjBF,EAAUd,EAAWO,MADJ,kBAGME,EAASC,GAHf,OAGTO,EAHS,OAIfJ,EAASI,GAJM,gDAMfC,QAAQC,IAAR,MACAL,EAAUd,EAAWQ,KAPN,yBASfM,EAAUd,EAAWM,MATN,4EAAH,qDAYhBU,OACC,CAACP,EAAUC,IAEP,CAACE,EAAOb,K,0MC/BjBqB,IAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAM,mCAECC,EAAa,mCAAG,oGACFF,IAAAA,IAAA,sCAAyCC,IADvC,cACnBE,EADmB,yBAElBA,EAASC,KAAKC,SAFI,2CAAH,qDAKbC,EAAY,mCAAG,WAAOC,GAAP,4FAAcC,EAAd,+BAAmB,EAAnB,SACDR,IAAAA,IAAA,gCAAmCC,EAAnC,iCAA+DM,EAA/D,iBAA6EC,EAA7E,yBADC,cAClBL,EADkB,yBAEjBA,EAASC,KAAKC,SAFG,2CAAH,sDAKZI,EAAiB,mCAAG,WAAOnC,GAAP,uFACN0B,IAAAA,IAAA,iBAAoB1B,EAApB,oBAAuC2B,EAAvC,oBADM,cACvBE,EADuB,yBAEtBA,EAASC,MAFa,2CAAH,sDAKjBM,EAAiB,mCAAG,WAAOpC,GAAP,4FAAgBkC,EAAhB,+BAAqB,EAArB,SACNR,IAAAA,IAAA,iBAAoB1B,EAApB,4BAA+C2B,EAA/C,gCAA0EO,IADpE,cACvBL,EADuB,yBAEtBA,EAASC,KAAKC,SAFQ,2CAAH,sDAKjB5B,EAAiB,mCAAG,WAAOH,GAAP,uFACN0B,IAAAA,IAAA,iBAAoB1B,EAApB,4BAA+C2B,EAA/C,oBADM,cACvBE,EADuB,yBAEtBA,EAASC,KAAKO,MAFQ,2CAAH","sources":["components/Cast/Cast.jsx","hooks/useFetching.jsx","services/api-service.js"],"sourcesContent":["import { useParams } from 'react-router-dom';\nimport { fetchMovieCredits } from 'services/api-service';\nimport { useFetching } from 'hooks/useFetching';\nimport { Loading } from 'components/Loading/Loading';\nimport { statusList } from 'hooks/useFetching';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [actors, status] = useFetching(fetchMovieCredits, movieId);\n\n  return (\n    <>\n      {status === statusList.ERR && (\n        <p>Something is wrong... Try to reload the page</p>\n      )}\n      {actors && actors.length === 0 && (\n        <p>There is no information about actors</p>\n      )}\n      {status === statusList.LOAD && <Loading />}\n      {status === statusList.IDLE && actors && (\n        <ul>\n          {actors.map(actor => (\n            <li key={actor.id}>{actor.name}</li>\n          ))}\n        </ul>\n      )}\n    </>\n  );\n};\n\nexport default Cast;\n","import { useState, useEffect } from 'react';\n\nexport const statusList = {\n  IDLE: 'idle',\n  LOAD: 'loading',\n  ERR: 'error',\n};\n\nexport const useFetching = (callback, fetchParametr = null) => {\n  const [state, setState] = useState(null);\n  const [status, setStatus] = useState(statusList.IDLE);\n\n  useEffect(() => {\n    if (fetchParametr === '') {\n      return;\n    }\n\n    const fetchFilms = async () => {\n      setStatus(statusList.LOAD);\n      try {\n        const result = await callback(fetchParametr);\n        setState(result);\n      } catch (error) {\n        console.log(error);\n        setStatus(statusList.ERR);\n      } finally {\n        setStatus(statusList.IDLE);\n      }\n    };\n    fetchFilms();\n  }, [callback, fetchParametr]);\n\n  return [state, status];\n};\n","import axios from \"axios\";\naxios.defaults.baseURL = \"https://api.themoviedb.org/3\"\nconst KEY = \"04c27220ef2dd4b0aa9913b6cfeafdd6\"\n\nexport const fetchTrending = async () =>{\n    const response = await axios.get(`/trending/movie/day?api_key=${KEY}`)\n    return response.data.results;\n}\n\nexport const searchMovies = async (query, page=1) => {\n    const response = await axios.get(`/search/movie?api_key=${KEY}&language=en-US&query=${query}&page=${page}&include_adult=false`);\n    return response.data.results;\n}\n\nexport const fetchMovieDetails = async (movieId) => {\n    const response = await axios.get(`/movie/${movieId}?api_key=${KEY}&language=en-US`);\n    return response.data;\n}\n\nexport const fetchMovieReviews = async (movieId, page=1) => {\n    const response = await axios.get(`/movie/${movieId}/reviews?api_key=${KEY}&language=en-US&page=${page}`);\n    return response.data.results;\n}\n\nexport const fetchMovieCredits = async (movieId) => {\n    const response = await axios.get(`/movie/${movieId}/credits?api_key=${KEY}&language=en-US`);\n    return response.data.cast;\n}"],"names":["movieId","useParams","useFetching","fetchMovieCredits","actors","status","statusList","length","map","actor","name","id","IDLE","LOAD","ERR","callback","fetchParametr","useState","state","setState","setStatus","useEffect","fetchFilms","result","console","log","axios","KEY","fetchTrending","response","data","results","searchMovies","query","page","fetchMovieDetails","fetchMovieReviews","cast"],"sourceRoot":""}