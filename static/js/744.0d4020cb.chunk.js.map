{"version":3,"file":"static/js/744.0d4020cb.chunk.js","mappings":"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","sources":["components/FilmsList/FilmsList.jsx","components/FilmsList/FilmsList.styled.jsx","hooks/useFetching.jsx","hooks/usePagination.jsx","services/api-service.js","views/Head.styled.jsx","views/HomePage.jsx","views/MovieDetailsPage.styled.jsx"],"sourcesContent":["import PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { ListItem, List, Vote, ImgThumb } from './FilmsList.styled';\nimport posterInstead from '../../images/poster.jpg';\nimport { useState } from 'react';\n\nexport const FilmsList = ({ films, loc }) => {\n  const [loadedImg, setLoadedImg] = useState(false);\n\n  return (\n    <List>\n      {films.map(\n        ({\n          id,\n          poster_path: poster,\n          original_title,\n          title,\n          vote_average: vote,\n        }) => (\n          <ListItem key={id}>\n            <Link to={`/movies/${id}`} state={{ from: loc }}>\n              <img\n                src={\n                  poster\n                    ? `https://image.tmdb.org/t/p/w500${poster}`\n                    : posterInstead\n                }\n                alt={title ?? original_title + 'poster'}\n                onLoad={() => setLoadedImg(true)}\n                style={{ display: loadedImg ? 'block' : 'none' }}\n              />\n              {!loadedImg && <ImgThumb />}\n\n              <p className=\"film-info\">{title ?? original_title}</p>\n\n              {vote !== 0 && (\n                <Vote>\n                  <span className=\"material-icons md-16\">star_border</span>\n                  {vote}\n                </Vote>\n              )}\n            </Link>\n          </ListItem>\n        )\n      )}\n    </List>\n  );\n};\n\nFilmsList.propTypes = {\n  loc: PropTypes.string,\n  films: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      poster_path: PropTypes.string,\n      original_title: PropTypes.string,\n      title: PropTypes.string,\n      vote_average: PropTypes.number,\n    }).isRequired\n  ).isRequired,\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: grid;\n  gap: 14px;\n\n  @media screen and (min-width: 480px) {\n    grid-template-columns: repeat(2, 1fr);\n    /* grid-template-rows: repeat(10, 1fr); */\n  }\n\n  @media screen and (min-width: 768px) {\n    grid-template-columns: repeat(3, 1fr);\n    /* grid-template-rows: repeat(10, 1fr); */\n    gap: 24px;\n  }\n\n  @media screen and (min-width: 1200px) {\n    grid-template-columns: repeat(4, 1fr);\n    /* grid-template-rows: repeat(5, 1fr); */\n    gap: 24px;\n  }\n`;\n\nexport const ListItem = styled.li`\n  color: grey;\n  background-color: rgb(32, 40, 62, 80%);\n  padding: 8px;\n  border-radius: 12px;\n  position: relative;\n\n  img {\n    border-radius: 5px;\n    margin-bottom: 18px;\n  }\n\n  .film-info {\n    font-weight: 600;\n    font-size: 16px;\n    line-height: 1.5;\n\n    letter-spacing: 0.02em;\n\n    color: #ebeef5;\n  }\n`;\n\nexport const Vote = styled.span`\n  position: absolute;\n  top: 20px;\n  left: 20px;\n  background: rgba(0, 0, 0, 0.65);\n  backdrop-filter: blur(8px);\n  padding: 4px 8px;\n  border-radius: 8px;\n  color: #ffad49;\n  font-size: 16px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  .md-16 {\n    font-size: 16px;\n  }\n`;\n\nexport const ImgThumb = styled.div`\n  background: #20283e;\n  border-radius: 8px;\n  width: 100%;\n  height: 400px;\n`;\n","import { useState, useEffect } from 'react';\n\nexport const statusList = {\n  IDLE: 'idle',\n  LOAD: 'loading',\n  ERR: 'error',\n};\n\nexport const useFetching = (callback, page, fetchParametr = null) => {\n  const [state, setState] = useState(null);\n  const [totalPages, setTotalPages] = useState(null);\n  const [status, setStatus] = useState(statusList.IDLE);\n\n  useEffect(() => {\n    if (fetchParametr === '') {\n      return;\n    }\n\n    const fetchFilms = async () => {\n      setStatus(statusList.LOAD);\n      try {\n        const result = await callback(page, fetchParametr);\n        setState(result.results);\n        setTotalPages(result.pages);\n      } catch (error) {\n        console.log(error);\n        setStatus(statusList.ERR);\n      } finally {\n        setStatus(statusList.IDLE);\n      }\n    };\n    fetchFilms();\n  }, [page, callback, fetchParametr]);\n\n  return [state, status, totalPages];\n};\n","import { useState } from 'react';\n\nexport const usePagination = init => {\n  const [page, setPage] = useState(init);\n\n  const onPagBtn = value => {\n    setPage(prevPage => prevPage + value);\n    window.scrollTo({\n      top: 0,\n      left: 0,\n    });\n  };\n\n  return [page, onPagBtn];\n};\n","import axios from \"axios\";\naxios.defaults.baseURL = \"https://api.themoviedb.org/3\"\nconst KEY = \"04c27220ef2dd4b0aa9913b6cfeafdd6\"\n\nexport const fetchTrending = async (page) =>{\n    const response = await axios.get(`/trending/movie/day?api_key=${KEY}&page=${page}`)\n    return {results: response.data.results, pages: response.data.total_pages}\n}\n\nexport const searchMovies = async ( page,query) => {\n    const response = await axios.get(`/search/movie?api_key=${KEY}&language=en-US&query=${query}&page=${page}&include_adult=false`);\n    return {results: response.data.results, pages: response.data.total_pages}\n}\n\nexport const fetchMovieDetails = async (movieId) => {\n    const response = await axios.get(`/movie/${movieId}?api_key=${KEY}&language=en-US`);\n    return {results: response.data, pages: null}\n}\n\nexport const fetchMovieReviews = async (page,movieId ) => {\n    const response = await axios.get(`/movie/${movieId}/reviews?api_key=${KEY}&language=en-US&page=${page}`);\n    return {results: response.data.results, pages: response.data.total_pages}\n}\n\nexport const fetchMovieCredits = async (movieId) => {\n    const response = await axios.get(`/movie/${movieId}/credits?api_key=${KEY}&language=en-US`);   \n    return {results: response.data.cast, pages: response.data.total_pages}\n}\n\n","import styled from 'styled-components';\n\nexport const Head = styled.h1`\n  font-weight: 600;\n  font-size: 64px;\n  line-height: 1.25;\n\n  letter-spacing: -0.02em;\n\n  color: #ebeef5;\n  margin: 80px 0;\n`;\n","import { useLocation } from 'react-router-dom';\nimport { FilmsList } from 'components/FilmsList/FilmsList';\nimport { Loading } from 'components/Loading/Loading';\nimport { fetchTrending } from 'services/api-service';\nimport { useFetching } from 'hooks/useFetching';\nimport { statusList } from 'hooks/useFetching';\nimport { Head } from './Head.styled';\nimport { Btn, Controls } from './MovieDetailsPage.styled';\nimport { usePagination } from 'hooks/usePagination';\n\nconst HomePage = () => {\n  const [page, onPagBtn] = usePagination(1);\n  const [films, status, totalPages] = useFetching(fetchTrending, page, null);\n  const { pathname, search } = useLocation();\n\n  return (\n    <>\n      <Head>Trending films</Head>\n      {status === statusList.ERR && (\n        <p>Something is wrong... Try to reload the page</p>\n      )}\n      {status === statusList.LOAD && <Loading />}\n      {status === statusList.IDLE && films && (\n        <>\n          <FilmsList films={films} loc={pathname + search} />\n          <Controls>\n            {page > 1 && (\n              <Btn as=\"button\" type=\"button\" onClick={() => onPagBtn(-1)}>\n                Prev page\n              </Btn>\n            )}\n            {page < totalPages && (\n              <Btn as=\"button\" type=\"button\" onClick={() => onPagBtn(1)}>\n                Next page\n              </Btn>\n            )}\n          </Controls>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default HomePage;\n","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const MovieDetails = styled.div`\n  display: flex;\n  max-width: 100vw;\n  padding: 0 80px;\n\n  img {\n    border-radius: 24px;\n    margin-right: 80px;\n    height: 720px;\n    width: 480px;\n  }\n`;\n\nexport const MovieInfo = styled.div`\n  span.info-block {\n    display: block;\n    margin-bottom: 24px;\n    font-weight: 400;\n    font-size: 20px;\n    line-height: 1.6;\n    color: #c3c8d4;\n    p:first-child {\n      font-size: 16px;\n      line-height: 1.5;\n      color: #767e94;\n      margin-bottom: 8px;\n    }\n  }\n\n  .tagline {\n    display: block;\n    font-weight: 700;\n    font-size: 24px;\n    line-height: 1.33;\n    letter-spacing: -0.015em;\n    color: #ebeef5;\n    margin-bottom: 24px;\n  }\n\n  .overview {\n    font-weight: 400;\n    font-size: 20px;\n    line-height: 1.6;\n    color: #8e95a9;\n    margin-bottom: 24px;\n  }\n`;\n\nexport const StyledLink = styled(Link)`\n  margin-right: 10px;\n`;\n\nexport const Btn = styled(Link)`\n  display: inline-block;\n  padding: 16px 32px;\n  background-color: #7b6ef6;\n  color: white;\n  border-radius: 12px;\n  border: none;\n  text-decoration: none;\n  cursor: pointer;\n\n  :not(:last-child) {\n    margin-right: 16px;\n  }\n`;\n\nexport const Controls = styled.div`\n  text-align: center;\n  padding: 32px 0;\n`;\n\nexport const BackdropPoster = styled.div`\n  max-width: 1280px;\n  height: 480px;\n  position: relative;\n\n  background: linear-gradient(\n      180deg,\n      rgba(54, 44, 146, 0.4) 0%,\n      rgba(18, 98, 151, 0.4) 100%\n    ),\n    url(${props => props.img}) center/cover no-repeat;\n\n  border-radius: 40px;\n  margin-bottom: 150px;\n`;\n\nexport const MovieTitle = styled.div`\n  position: absolute;\n  left: 80px;\n  bottom: -70px;\n  background: rgba(32, 40, 62, 0.5);\n  backdrop-filter: blur(24px);\n  border-radius: 24px;\n  padding: 40px;\n  max-width: 50%;\n\n  h1 {\n    font-weight: 600;\n    font-size: 32px;\n    line-height: 1.25;\n\n    letter-spacing: -0.02em;\n    color: #ebeef5;\n  }\n`;\n"],"names":["FilmsList","films","loc","useState","loadedImg","setLoadedImg","map","id","poster","poster_path","original_title","title","vote","vote_average","to","state","from","src","posterInstead","alt","onLoad","style","display","className","List","styled","ListItem","Vote","ImgThumb","statusList","IDLE","LOAD","ERR","useFetching","callback","page","fetchParametr","setState","totalPages","setTotalPages","status","setStatus","useEffect","fetchFilms","result","results","pages","console","log","usePagination","init","setPage","value","prevPage","window","scrollTo","top","left","axios","KEY","fetchTrending","response","data","total_pages","searchMovies","query","fetchMovieDetails","movieId","fetchMovieReviews","fetchMovieCredits","cast","Head","onPagBtn","useLocation","pathname","search","as","type","onClick","MovieDetails","MovieInfo","StyledLink","Link","Btn","Controls","BackdropPoster","props","img","MovieTitle"],"sourceRoot":""}