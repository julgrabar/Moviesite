{"version":3,"file":"static/js/675.31c67d01.chunk.js","mappings":"kPAEaA,EAAa,CACxBC,KAAM,OACNC,KAAM,UACNC,IAAK,SAGMC,EAAc,SAACC,EAAUC,GAAgC,IAA1BC,EAAyB,uDAAT,KAC1D,GAA0BC,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAoCF,EAAAA,EAAAA,UAAS,MAA7C,eAAOG,EAAP,KAAmBC,EAAnB,KACA,GAA4BJ,EAAAA,EAAAA,UAASR,EAAWC,MAAhD,eAAOY,EAAP,KAAeC,EAAf,KAuBA,OArBAC,EAAAA,EAAAA,YAAU,WACR,GAAsB,KAAlBR,EAAJ,CAIA,IAAMS,EAAU,mCAAG,2FACjBF,EAAUd,EAAWE,MADJ,kBAGMG,EAASC,EAAMC,GAHrB,OAGTU,EAHS,OAIfP,EAASO,EAAOC,SAChBN,EAAcK,EAAOE,OALN,gDAOfC,QAAQC,IAAR,MACAP,EAAUd,EAAWG,KARN,yBAUfW,EAAUd,EAAWC,MAVN,4EAAH,qDAahBe,OACC,CAACV,EAAMD,EAAUE,IAEb,CAACE,EAAOI,EAAQF,K,wHCiDzB,UApEyB,WAAO,IAAD,MACrBW,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAWC,EAAAA,EAAAA,MACjB,GAAwBrB,EAAAA,EAAAA,GAAYsB,EAAAA,GAAmBJ,GAAvD,eAAOK,EAAP,KAAcd,EAAd,KAEA,OACE,2BACGA,IAAWb,EAAAA,EAAAA,MACV,wEAEDa,IAAWb,EAAAA,EAAAA,OAAmB,SAAC,IAAD,IAC9Ba,IAAWb,EAAAA,EAAAA,MAAmB2B,IAC7B,iCACE,SAAC,KAAD,CACEC,IACED,EAAME,cAAN,6CAC0CF,EAAME,eAC5CC,EAJR,UAOE,SAAC,KAAD,WACE,kCAAKH,EAAMI,aAAX,QAAoBJ,EAAMK,qBAI9B,UAAC,KAAD,YACE,gBACEC,IACEN,EAAMO,YAAN,yCACsCP,EAAMO,aACxCC,EAENC,IAAI,OAGN,UAAC,KAAD,YACE,iBAAMC,UAAU,UAAhB,SAA2BV,EAAMW,WAEjC,cAAGD,UAAU,WAAb,SAAyBV,EAAMY,YAE/B,kBAAMF,UAAU,aAAhB,WACE,oCACA,6BAAKV,EAAMa,cAAgB,wBAG7B,kBAAMH,UAAU,aAAhB,WACE,0CACA,uBAAIV,EAAMc,mBAGZ,kBAAMJ,UAAU,aAAhB,WACE,qCACA,iCAAOV,EAAMe,QAAb,cAGF,kBAAML,UAAU,aAAhB,WACE,kCAAc,KACd,uBAAIV,EAAMgB,OAAOC,KAAI,SAAAC,GAAK,OAAIA,EAAMC,QAAMC,KAAK,YAEjD,SAAC,KAAD,CAAKC,GAAE,iBAAExB,QAAF,IAAEA,GAAF,UAAEA,EAAUf,aAAZ,aAAE,EAAiBwC,YAAnB,QAA2B,IAAlC,mC,6NCvEDC,EAAeC,EAAAA,GAAAA,IAAH,uMAaZC,EAAYD,EAAAA,GAAAA,IAAH,+nBAuCTE,IAJaF,EAAAA,EAAAA,IAAOG,EAAAA,GAAPH,CAAH,gDAIJA,EAAAA,EAAAA,IAAOG,EAAAA,GAAPH,CAAH,8rBAwCHI,EAAaJ,EAAAA,GAAAA,IAAH,mEAKVK,EAAiBL,EAAAA,GAAAA,IAAH,8SAUjB,SAAAM,GAAK,OAAIA,EAAM7B,OAMZ8B,EAAaP,EAAAA,GAAAA,IAAH,6V","sources":["hooks/useFetching.jsx","views/MovieDetailsPage/MovieDetailsPage.jsx","views/MovieDetailsPage/MovieDetailsPage.styled.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\n\nexport const statusList = {\n  IDLE: 'idle',\n  LOAD: 'loading',\n  ERR: 'error',\n};\n\nexport const useFetching = (callback, page, fetchParametr = null) => {\n  const [state, setState] = useState(null);\n  const [totalPages, setTotalPages] = useState(null);\n  const [status, setStatus] = useState(statusList.IDLE);\n\n  useEffect(() => {\n    if (fetchParametr === '') {\n      return;\n    }\n\n    const fetchFilms = async () => {\n      setStatus(statusList.LOAD);\n      try {\n        const result = await callback(page, fetchParametr);\n        setState(result.results);\n        setTotalPages(result.pages);\n      } catch (error) {\n        console.log(error);\n        setStatus(statusList.ERR);\n      } finally {\n        setStatus(statusList.IDLE);\n      }\n    };\n    fetchFilms();\n  }, [page, callback, fetchParametr]);\n\n  return [state, status, totalPages];\n};\n","import { useFetching } from 'hooks/useFetching';\nimport { useLocation, useParams } from 'react-router-dom';\nimport { fetchMovieDetails } from 'services/api-service';\nimport {\n  MovieInfo,\n  MovieDetails,\n  Btn,\n  BackdropPoster,\n  MovieTitle,\n} from './MovieDetailsPage.styled';\nimport { statusList } from 'hooks/useFetching';\nimport { Loading } from 'components/Loading/Loading';\nimport backdrop from '../../images/backdrop.jpg';\nimport poster from '../../images/poster.jpg';\n\nconst MovieDetailsPage = () => {\n  const { movieId } = useParams();\n  const location = useLocation();\n  const [movie, status] = useFetching(fetchMovieDetails, movieId);\n\n  return (\n    <div>\n      {status === statusList.ERR && (\n        <p>Something is wrong... Try to reload the page</p>\n      )}\n      {status === statusList.LOAD && <Loading />}\n      {status === statusList.IDLE && movie && (\n        <>\n          <BackdropPoster\n            img={\n              movie.backdrop_path\n                ? `https://image.tmdb.org/t/p/original${movie.backdrop_path}`\n                : backdrop\n            }\n          >\n            <MovieTitle>\n              <h1>{movie.title ?? movie.original_name}</h1>\n            </MovieTitle>\n          </BackdropPoster>\n\n          <MovieDetails>\n            <img\n              src={\n                movie.poster_path\n                  ? `https://image.tmdb.org/t/p/w500${movie.poster_path}`\n                  : poster\n              }\n              alt=\"#\"\n            />\n\n            <MovieInfo>\n              <span className=\"tagline\">{movie.tagline}</span>\n\n              <p className=\"overview\">{movie.overview}</p>\n\n              <span className=\"info-block\">\n                <p>Rating:</p>\n                <p> {movie.vote_average || 'No information'}</p>\n              </span>\n\n              <span className=\"info-block\">\n                <p>Release Date:</p>\n                <p>{movie.release_date}</p>\n              </span>\n\n              <span className=\"info-block\">\n                <p>Run time</p>\n                <p>{`${movie.runtime} min`}</p>\n              </span>\n\n              <span className=\"info-block\">\n                <p>Genres</p>{' '}\n                <p>{movie.genres.map(genre => genre.name).join(', ')}</p>\n              </span>\n              <Btn to={location?.state?.from ?? '/'}>Go back</Btn>\n            </MovieInfo>\n          </MovieDetails>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default MovieDetailsPage;\n","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const MovieDetails = styled.div`\n  display: flex;\n  max-width: 100vw;\n  padding: 0 80px 40px 80px;\n\n  img {\n    border-radius: 24px;\n    margin-right: 80px;\n    height: 720px;\n    width: 480px;\n  }\n`;\n\nexport const MovieInfo = styled.div`\n  span.info-block {\n    display: block;\n    margin-bottom: 24px;\n    font-weight: 400;\n    font-size: 20px;\n    line-height: 1.6;\n    color: #c3c8d4;\n    p:first-child {\n      font-size: 16px;\n      line-height: 1.5;\n      color: #767e94;\n      margin-bottom: 8px;\n    }\n  }\n\n  .tagline {\n    display: block;\n    font-weight: 700;\n    font-size: 24px;\n    line-height: 1.33;\n    letter-spacing: -0.015em;\n    color: #ebeef5;\n    margin-bottom: 24px;\n  }\n\n  .overview {\n    font-weight: 400;\n    font-size: 20px;\n    line-height: 1.6;\n    color: #8e95a9;\n    margin-bottom: 24px;\n  }\n`;\n\nexport const StyledLink = styled(Link)`\n  margin-right: 10px;\n`;\n\nexport const Btn = styled(Link)`\n  display: inline-block;\n  padding: 14px 18px;\n  background-color: #7b6ef6;\n  color: white;\n  border-radius: 12px;\n  border: none;\n  text-decoration: none;\n  cursor: pointer;\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  :hover {\n    transform: scale(1.1);\n  }\n\n  :not(:last-child) {\n    margin-right: 8px;\n  }\n  :not(:first-child) {\n    margin-left: 8px;\n  }\n\n  &.current {\n    transform: scale(1.15);\n    margin: 0 14px;\n    cursor: auto;\n  }\n\n  @media screen and (max-width: 480px) {\n    &.hide-btn {\n      display: none;\n    }\n  }\n\n  @media screen and (max-width: 768px) {\n    padding: 8px;\n    border-radius: 8px;\n  }\n`;\n\nexport const PagWrapper = styled.div`\n  text-align: center;\n  padding: 48px 0;\n`;\n\nexport const BackdropPoster = styled.div`\n  max-width: 1280px;\n  height: 480px;\n  position: relative;\n\n  background: linear-gradient(\n      180deg,\n      rgba(54, 44, 146, 0.4) 0%,\n      rgba(18, 98, 151, 0.4) 100%\n    ),\n    url(${props => props.img}) center/cover no-repeat;\n\n  border-radius: 40px;\n  margin-bottom: 150px;\n`;\n\nexport const MovieTitle = styled.div`\n  position: absolute;\n  left: 80px;\n  bottom: -70px;\n  background: rgba(32, 40, 62, 0.5);\n  backdrop-filter: blur(24px);\n  border-radius: 24px;\n  padding: 40px;\n  max-width: 50%;\n\n  h1 {\n    font-weight: 600;\n    font-size: 32px;\n    line-height: 1.25;\n\n    letter-spacing: -0.02em;\n    color: #ebeef5;\n  }\n`;\n"],"names":["statusList","IDLE","LOAD","ERR","useFetching","callback","page","fetchParametr","useState","state","setState","totalPages","setTotalPages","status","setStatus","useEffect","fetchFilms","result","results","pages","console","log","movieId","useParams","location","useLocation","fetchMovieDetails","movie","img","backdrop_path","backdrop","title","original_name","src","poster_path","poster","alt","className","tagline","overview","vote_average","release_date","runtime","genres","map","genre","name","join","to","from","MovieDetails","styled","MovieInfo","Btn","Link","PagWrapper","BackdropPoster","props","MovieTitle"],"sourceRoot":""}